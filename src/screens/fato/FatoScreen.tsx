import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import React, { useEffect, useState } from 'react';
import { StyleSheet, Text, TouchableOpacity, View } from 'react-native';
import * as Animatable from 'react-native-animatable';
import { useGame } from '../contexts/GameContext';
import { RootStackParamList } from '../routes/types';

type Fato = {
  texto: string;
  isTrue: boolean;
  explicacao: string;
};

const fatosOriginais: Fato[] = [
  { texto: 'O sol √© uma estrela.', isTrue: true, explicacao: 'O Sol √© uma estrela do tipo an√£ amarela.' },
  { texto: 'A √°gua ferve a 50 graus Celsius.', isTrue: false, explicacao: 'A √°gua ferve a 100¬∞C ao n√≠vel do mar.' },
  { texto: 'Os peixes respiram por br√¢nquias.', isTrue: true, explicacao: 'As br√¢nquias permitem que os peixes respirem debaixo d\'√°gua.' },
  { texto: 'O Brasil faz parte da Am√©rica do Norte.', isTrue: false, explicacao: 'O Brasil est√° localizado na Am√©rica do Sul.' },
  { texto: 'A banana √© uma fonte de pot√°ssio.', isTrue: true, explicacao: 'Bananas s√£o ricas em pot√°ssio, importante para os m√∫sculos.' },
  { texto: 'O ser humano tem tr√™s pulm√µes.', isTrue: false, explicacao: 'O ser humano tem dois pulm√µes.' },
  { texto: 'A Terra gira em torno do Sol.', isTrue: true, explicacao: 'Esse movimento √© chamado de transla√ß√£o e dura cerca de 365 dias.' },
  { texto: 'O pinguim vive no deserto.', isTrue: false, explicacao: 'Pinguins vivem em regi√µes frias, como a Ant√°rtica.' },
  { texto: 'As abelhas produzem mel.', isTrue: true, explicacao: 'O mel √© produzido a partir do n√©ctar das flores.' },
  { texto: 'O oxig√™nio √© essencial para a vida.', isTrue: true, explicacao: 'O oxig√™nio √© necess√°rio para a respira√ß√£o celular.' },
   { texto: 'O ser humano tem 5 sentidos.', isTrue: true, explicacao: 'Os cinco sentidos s√£o: vis√£o, audi√ß√£o, olfato, paladar e tato.' },
  { texto: 'O gelo √© mais pesado que a √°gua.', isTrue: false, explicacao: 'O gelo √© menos denso que a √°gua, por isso flutua.' },
  { texto: 'Rel√¢mpagos sempre v√™m antes do trov√£o.', isTrue: true, explicacao: 'A luz viaja mais r√°pido que o som, ent√£o vemos o rel√¢mpago antes.' },
  { texto: 'Os morcegos s√£o cegos.', isTrue: false, explicacao: 'Morcegos n√£o s√£o cegos, mas usam a ecolocaliza√ß√£o para se orientar.' },
  { texto: 'A lua tem luz pr√≥pria.', isTrue: false, explicacao: 'A luz da lua √© a luz do sol refletida.' },
  { texto: 'A eletricidade sempre foi conhecida pela humanidade.', isTrue: false, explicacao: 'A eletricidade foi descoberta e estudada com profundidade apenas nos √∫ltimos s√©culos.' },
  { texto: 'A girafa √© o animal terrestre mais alto.', isTrue: true, explicacao: 'As girafas podem atingir at√© 6 metros de altura.' },
  { texto: 'O oceano Atl√¢ntico √© o maior do mundo.', isTrue: false, explicacao: 'O maior oceano √© o Pac√≠fico.' },
  { texto: 'A Ant√°rtida √© o continente mais frio.', isTrue: true, explicacao: 'A Ant√°rtida tem as temperaturas mais baixas do planeta.' },
  { texto: 'A luz branca √© composta por v√°rias cores.', isTrue: true, explicacao: 'O prisma revela que a luz branca cont√©m todas as cores do arco-√≠ris.' },
  { texto: 'As plantas fazem fotoss√≠ntese durante a noite.', isTrue: false, explicacao: 'A fotoss√≠ntese ocorre na presen√ßa de luz solar.' },
  { texto: 'A Terra tem apenas uma lua.', isTrue: true, explicacao: 'A Lua √© o √∫nico sat√©lite natural da Terra.' },
  { texto: 'O som se propaga mais r√°pido no ar do que na √°gua.', isTrue: false, explicacao: 'O som se propaga mais r√°pido na √°gua porque as part√≠culas est√£o mais pr√≥ximas.' },
  { texto: 'O chocolate √© t√≥xico para c√£es.', isTrue: true, explicacao: 'O chocolate cont√©m teobromina, que √© prejudicial aos c√£es.' },
  { texto: 'O Monte Everest √© a montanha mais alta do mundo.', isTrue: true, explicacao: 'O Everest tem 8.848 metros de altitude.' },
];


export default function FatoScreen() {
  const navigation = useNavigation<NativeStackNavigationProp<RootStackParamList>>();
  const { adicionarResultado, vidas, acertos, historico } = useGame();

  const [fatosRestantes, setFatosRestantes] = useState<Fato[]>([]);
  const [fatoAtual, setFatoAtual] = useState<Fato | null>(null);

  useEffect(() => {
    const naoRepetidos = fatosOriginais.filter(f => !historico.some(h => h.fato === f.texto));
    setFatosRestantes(naoRepetidos);
  }, [historico]);

  useEffect(() => {
    sortearFato();
  }, [fatosRestantes]);

  function sortearFato() {
    if (fatosRestantes.length === 0) {
      setFatoAtual(null);
      return;
    }
    const indice = Math.floor(Math.random() * fatosRestantes.length);
    setFatoAtual(fatosRestantes[indice]);
  }

  function responder(respostaUsuario: boolean) {
    if (!fatoAtual) return;

    const acertou = respostaUsuario === fatoAtual.isTrue;

    adicionarResultado({
      fato: fatoAtual.texto,
      respostaUsuario,
      acertou,
    });

    setTimeout(() => {
      if (!acertou && vidas - 1 === 0) {
        navigation.navigate('Resultado', {
          fato: fatoAtual.texto,
          respostaUsuario,
          acertou: false,
          fim: 'perdeu',
          explicacao: fatoAtual.explicacao,
        });
        return;
      }

      if (acertou && acertos + 1 === 5) {
        navigation.navigate('Resultado', {
          fato: fatoAtual.texto,
          respostaUsuario,
          acertou: true,
          fim: 'ganhou',
          explicacao: fatoAtual.explicacao,
        });
        return;
      }

      navigation.navigate('Resultado', {
        fato: fatoAtual.texto,
        respostaUsuario,
        acertou,
        fim: null,
        explicacao: fatoAtual.explicacao,
      });
    }, 100);
  }

  if (!fatoAtual) {
    return (
      <View style={styles.container}>
        <Text style={styles.texto}>üéâ Voc√™ respondeu todos os fatos dispon√≠veis!</Text>
      </View>
    );
  }

  return (
    <View style={styles.container}>
      <Text style={styles.vidas}>
        Vidas: {'‚ù§Ô∏è'.repeat(vidas) + 'ü§ç'.repeat(5 - vidas)}
      </Text>

      <Animatable.Text animation="zoomIn" duration={500} style={styles.fato}>
        {fatoAtual.texto}
      </Animatable.Text>

      <View style={styles.botoes}>
        <Animatable.View animation="bounce" duration={1000} iterationCount="infinite">
          <TouchableOpacity style={styles.botao} onPress={() => responder(true)}>
            <Text style={styles.textoBotao}>Verdadeiro</Text>
          </TouchableOpacity>
        </Animatable.View>
        <Animatable.View animation="bounce" duration={1000} iterationCount="infinite">
          <TouchableOpacity style={styles.botao} onPress={() => responder(false)}>
            <Text style={styles.textoBotao}>Falso</Text>
          </TouchableOpacity>
        </Animatable.View>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#87CEEB',
    justifyContent: 'center',
    alignItems: 'center',
    padding: 16,
  },
  vidas: {
    fontSize: 16,
    fontFamily: 'monospace',
    marginBottom: 20,
    color: '#000',
  },
  fato: {
    fontSize: 22,
    textAlign: 'center',
    marginBottom: 40,
    color: '#000',
    fontFamily: 'monospace',
    backgroundColor: '#F1FA8C',
    padding: 10,
    borderWidth: 3,
    borderColor: '#000',
  },
  botoes: {
    flexDirection: 'row',
    gap: 20,
  },
  botao: {
    backgroundColor: '#E63946',
    paddingVertical: 14,
    paddingHorizontal: 20,
    borderRadius: 0,
    borderWidth: 3,
    borderColor: '#000',
    marginHorizontal: 10,
  },
  textoBotao: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
    fontFamily: 'monospace',
  },
  texto: {
    fontSize: 16,
    color: '#000',
    fontFamily: 'monospace',
  },
});
